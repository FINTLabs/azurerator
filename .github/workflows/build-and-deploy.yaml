name: Create and publish a Docker image

on:
  push:
    branches:
      - 'main'
      - 'FLA-18-refresh-repo-on-removal'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,enable=true,priority=100,prefix=sha-,suffix=,format=short

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-aks:
    name: deploy for ${{ matrix.org }} to ${{ matrix.cluster }}
    runs-on: ubuntu-latest
    needs: build-and-push-image
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        org:
          - operators
        cluster:
          - aks-alpha-fint-2021-11-18
    #            - aks-beta-fint-2021-11-23
    #            - aks-api-fint-2022-02-08

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get environment
        uses: actions/github-script@v6
        id: environment
        with:
          script: return '${{ matrix.cluster }}'.split('-')[1]
          result-encoding: string

      - name: Get resource group
        uses: actions/github-script@v6
        id: resource-group
        with:
          script: return 'rg-aks-${{ steps.environment.outputs.result }}
          result-encoding: string

      - name: Bake manifests with Kustomize
        uses: azure/k8s-bake@v2
        id: bake
        with:
          renderEngine: 'kustomize'
          kustomizationPath: 'kustomize/overlays/${{ steps.environment.outputs.result }}'

      - uses: azure/login@v1
        with:
          creds: "${{ secrets[format('AKS_{0}_FINT_GITHUB', steps.environment.outputs.result)] }}"

      - uses: azure/kubelogin@v1.1
        with:
          kubelogin-version: 'v0.0.26'

      - name: Set the target cluster.
        uses: azure/aks-set-context@v3
        with:
          cluster-name: ${{ matrix.cluster }}
          resource-group: ${{ steps.resource-group.outputs.result }}
          admin: 'true'
          use-kubelogin: 'true'

      - name: Deploy to cluster
        uses: azure/k8s-deploy@v4.9
        with:
          manifests: ${{ steps.bake.outputs.manifestsBundle }}
          images: ${{ needs.build-and-push.outputs.tags }}
          namespace: ${{ matrix.org }}
          action: deploy
